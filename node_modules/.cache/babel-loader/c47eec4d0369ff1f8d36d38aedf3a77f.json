{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bala/Desktop/Redux Assignment 5/src/containers/Persons.js\";\nimport React, { Component } from \"react\";\nimport Person from \"../components/Person/Person\";\nimport AddPerson from \"../components/AddPerson/AddPerson\";\nimport { connect } from 'react-redux';\n\nclass Persons extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.personAddedHandler = () => {\n      const newPerson = {\n        id: Math.random(),\n        // not really unique but good enough here!\n        name: \"Max\",\n        age: Math.floor(Math.random() * 40)\n      };\n      this.setState(prevState => {\n        return {\n          persons: prevState.persons.concat(newPerson)\n        };\n      });\n    };\n\n    this.personDeletedHandler = personId => {\n      this.setState(prevState => {\n        return {\n          persons: prevState.persons.filter(person => person.id !== personId)\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddPerson, {\n        personAdded: this.personAddedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), this.props.prsns.map(person => /*#__PURE__*/_jsxDEV(Person, {\n        name: person.name,\n        age: person.age,\n        clicked: id => this.personDeletedHandler(person.id)\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    prsns: [...state.persons]\n  };\n};\n\nexport default connect(mapStateToProps)(Persons);","map":{"version":3,"sources":["/Users/bala/Desktop/Redux Assignment 5/src/containers/Persons.js"],"names":["React","Component","Person","AddPerson","connect","Persons","personAddedHandler","newPerson","id","Math","random","name","age","floor","setState","prevState","persons","concat","personDeletedHandler","personId","filter","person","render","props","prsns","map","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAG5BK,kBAH4B,GAGP,MAAM;AACzB,YAAMC,SAAS,GAAG;AAChBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADY;AACG;AACnBC,QAAAA,IAAI,EAAE,KAFU;AAGhBC,QAAAA,GAAG,EAAEH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACC,MAAL,KAAgB,EAA3B;AAHW,OAAlB;AAKA,WAAKI,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AAAEC,UAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,CAAkBC,MAAlB,CAAyBV,SAAzB;AAAX,SAAP;AACD,OAFD;AAGD,KAZ2B;;AAAA,SAc5BW,oBAd4B,GAcLC,QAAQ,IAAI;AACjC,WAAKL,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLC,UAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,CAAkBI,MAAlB,CAAyBC,MAAM,IAAIA,MAAM,CAACb,EAAP,KAAcW,QAAjD;AADJ,SAAP;AAGD,OAJD;AAKD,KApB2B;AAAA;;AAsB9BG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE,KAAKhB;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKiB,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBJ,MAAM,iBAC1B,QAAC,MAAD;AAEE,QAAA,IAAI,EAAEA,MAAM,CAACV,IAFf;AAGE,QAAA,GAAG,EAAEU,MAAM,CAACT,GAHd;AAIE,QAAA,OAAO,EAAEJ,EAAE,IAAI,KAAKU,oBAAL,CAA0BG,MAAM,CAACb,EAAjC;AAJjB,SACOa,MAAM,CAACb,EADd;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AApC6B;;AAwChC,MAAMkB,eAAe,GAAGC,KAAK,IAAG;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACX,OAAV;AADJ,GAAP;AAGF,CAJD;;AAMA,eAAeZ,OAAO,CAACsB,eAAD,CAAP,CAAyBrB,OAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Person from \"../components/Person/Person\";\nimport AddPerson from \"../components/AddPerson/AddPerson\";\nimport { connect } from 'react-redux';\n\nclass Persons extends Component {\n\n\n    personAddedHandler = () => {\n      const newPerson = {\n        id: Math.random(), // not really unique but good enough here!\n        name: \"Max\",\n        age: Math.floor(Math.random() * 40)\n      };\n      this.setState(prevState => {\n        return { persons: prevState.persons.concat(newPerson) };\n      });\n    };\n\n    personDeletedHandler = personId => {\n      this.setState(prevState => {\n        return {\n          persons: prevState.persons.filter(person => person.id !== personId)\n        };\n      });\n    };\n\n  render() {\n    return (\n      <div>\n        <AddPerson personAdded={this.personAddedHandler} />\n        {this.props.prsns.map(person => (\n          <Person\n            key={person.id}\n            name={person.name}\n            age={person.age}\n            clicked={id => this.personDeletedHandler(person.id)}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state =>{\n   return {\n       prsns: [...state.persons]\n   } \n}\n\nexport default connect(mapStateToProps)(Persons);\n"]},"metadata":{},"sourceType":"module"}