{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bala/Desktop/Redux Assignment 5/src/containers/Persons.js\";\nimport React, { Component } from \"react\";\nimport Person from \"../components/Person/Person\";\nimport AddPerson from \"../components/AddPerson/AddPerson\";\nimport { connect } from 'react-redux';\n\nclass Persons extends Component {\n  // personAddedHandler = () => {\n  //   const newPerson = {\n  //     id: Math.random(), // not really unique but good enough here!\n  //     name: \"Max\",\n  //     age: Math.floor(Math.random() * 40)\n  //   };\n  //   this.setState(prevState => {\n  //     return { persons: prevState.props.prsns.concat(newPerson) };\n  //   });\n  // };\n  // personDeletedHandler = personId => {\n  //   this.setState(prevState => {\n  //     return {\n  //       persons: prevState.persons.filter(person => person.id !== personId)\n  //     };\n  //   });\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddPerson, {\n        personAdded: this.props.personAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), this.props.prsns.map(person => /*#__PURE__*/_jsxDEV(Person, {\n        name: person.name,\n        age: person.age,\n        clicked: id => this.props.personDel(person.id)\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    prsns: [...state.persons]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    personAdd: () => dispatch({\n      type: \"ADD\"\n    }),\n    personDel: () => dispatch({\n      type: \"DELETE\",\n      id: person.id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);","map":{"version":3,"sources":["/Users/bala/Desktop/Redux Assignment 5/src/containers/Persons.js"],"names":["React","Component","Person","AddPerson","connect","Persons","render","props","personAdd","prsns","map","person","name","age","id","personDel","mapStateToProps","state","persons","mapDispatchToProps","dispatch","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEFK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,GAAjB,CAAqBC,MAAM,iBAC1B,QAAC,MAAD;AAEE,QAAA,IAAI,EAAEA,MAAM,CAACC,IAFf;AAGE,QAAA,GAAG,EAAED,MAAM,CAACE,GAHd;AAIE,QAAA,OAAO,EAAEC,EAAE,IAAI,KAAKP,KAAL,CAAWQ,SAAX,CAAqBJ,MAAM,CAACG,EAA5B;AAJjB,SACOH,MAAM,CAACG,EADd;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AApC6B;;AAwChC,MAAME,eAAe,GAAGC,KAAK,IAAG;AAC7B,SAAO;AACHR,IAAAA,KAAK,EAAE,CAAC,GAAGQ,KAAK,CAACC,OAAV;AADJ,GAAP;AAGF,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACNZ,IAAAA,SAAS,EAAE,MAAMY,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAD,CADnB;AAENN,IAAAA,SAAS,EAAE,MAAMK,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,QAAN;AAAgBP,MAAAA,EAAE,EAACH,MAAM,CAACG;AAA1B,KAAD;AAFnB,GAAN;AAIH,CALD;;AAOA,eAAeV,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,OAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Person from \"../components/Person/Person\";\nimport AddPerson from \"../components/AddPerson/AddPerson\";\nimport { connect } from 'react-redux';\n\nclass Persons extends Component {\n\n\n    // personAddedHandler = () => {\n    //   const newPerson = {\n    //     id: Math.random(), // not really unique but good enough here!\n    //     name: \"Max\",\n    //     age: Math.floor(Math.random() * 40)\n    //   };\n    //   this.setState(prevState => {\n    //     return { persons: prevState.props.prsns.concat(newPerson) };\n    //   });\n    // };\n\n    // personDeletedHandler = personId => {\n    //   this.setState(prevState => {\n    //     return {\n    //       persons: prevState.persons.filter(person => person.id !== personId)\n    //     };\n    //   });\n    // };\n\n  render() {\n    return (\n      <div>\n        <AddPerson personAdded={this.props.personAdd} />\n        {this.props.prsns.map(person => (\n          <Person\n            key={person.id}\n            name={person.name}\n            age={person.age}\n            clicked={id => this.props.personDel(person.id)}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state =>{\n   return {\n       prsns: [...state.persons]\n   } \n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n    personAdd: () => dispatch({type:\"ADD\"}),\n    personDel: () => dispatch({type:\"DELETE\", id:person.id})\n}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);\n"]},"metadata":{},"sourceType":"module"}