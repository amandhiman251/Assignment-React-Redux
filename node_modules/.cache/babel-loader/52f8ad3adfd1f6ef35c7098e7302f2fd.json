{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bala/Desktop/Redux Assignment 5/src/containers/Persons.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../store/actions/actions';\nimport Person from '../components/Person/Person';\nimport AddPerson from '../components/AddPerson/AddPerson';\n\nclass Persons extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddPerson, {\n        personAdded: this.props.onPersonAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), this.props.persons.map(person => /*#__PURE__*/_jsxDEV(Person, {\n        name: person.name,\n        age: person.age,\n        clicked: () => this.props.onPersonDeleted(person.id)\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    persons: state.persons\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPersonAdded: (name, age) => dispatch({\n      type: actionTypes.ADD_PERSON,\n      payload: {\n        name,\n        age\n      }\n    }),\n    onPersonDeleted: id => dispatch({\n      type: actionTypes.DELETE_PERSON,\n      payload: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);","map":{"version":3,"sources":["/Users/bala/Desktop/Redux Assignment 5/src/containers/Persons.js"],"names":["React","Component","connect","actionTypes","Person","AddPerson","Persons","render","props","onPersonAdded","persons","map","person","name","age","onPersonDeleted","id","mapStateToProps","state","mapDispatchToProps","dispatch","type","ADD_PERSON","payload","DELETE_PERSON"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC5BM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,iBAC1B,QAAC,MAAD;AAEI,QAAA,IAAI,EAAEA,MAAM,CAACC,IAFjB;AAGI,QAAA,GAAG,EAAED,MAAM,CAACE,GAHhB;AAII,QAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWO,eAAX,CAA2BH,MAAM,CAACI,EAAlC;AAJnB,SACSJ,MAAM,CAACI,EADhB;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAf2B;;AAkBhC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,OAAO,EAAEQ,KAAK,CAACR;AADZ,GAAP;AAGH,CAJD;;AAMA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHX,IAAAA,aAAa,EAAE,CAACI,IAAD,EAAOC,GAAP,KACXM,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElB,WAAW,CAACmB,UAApB;AAAgCC,MAAAA,OAAO,EAAE;AAAEV,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAzC,KAAD,CAFT;AAGHC,IAAAA,eAAe,EAAEC,EAAE,IACfI,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElB,WAAW,CAACqB,aAApB;AAAmCD,MAAAA,OAAO,EAAEP;AAA5C,KAAD;AAJT,GAAP;AAMH,CAPD;;AASA,eAAed,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actionTypes from '../store/actions/actions';\nimport Person from '../components/Person/Person';\nimport AddPerson from '../components/AddPerson/AddPerson';\n\nclass Persons extends Component {\n    render() {\n        return (\n            <div>\n                <AddPerson personAdded={this.props.onPersonAdded} />\n                {this.props.persons.map(person => (\n                    <Person\n                        key={person.id}\n                        name={person.name}\n                        age={person.age}\n                        clicked={() => this.props.onPersonDeleted(person.id)}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        persons: state.persons\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPersonAdded: (name, age) =>\n            dispatch({ type: actionTypes.ADD_PERSON, payload: { name, age } }),\n        onPersonDeleted: id =>\n            dispatch({ type: actionTypes.DELETE_PERSON, payload: id })\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);\n"]},"metadata":{},"sourceType":"module"}