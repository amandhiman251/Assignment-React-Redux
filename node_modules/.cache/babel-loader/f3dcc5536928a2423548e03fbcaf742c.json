{"ast":null,"code":"import * as actnType from '../actions';\nconst initialState = {\n  persons: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actnType.ADD:\n      const newPerson = {\n        id: Math.random(),\n        // not really unique but good enough here!\n        name: action.person.name,\n        age: action.person.age\n      };\n      return {\n        persons: state.persons.concat(newPerson)\n      };\n\n    case actnType.DELETE:\n      return {\n        persons: state.persons.filter(person => person.id !== action.personid)\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/bala/Desktop/Redux Assignment 5/src/store/reducer/reducer.js"],"names":["actnType","initialState","persons","reducer","state","action","type","ADD","newPerson","id","Math","random","name","person","age","concat","DELETE","filter","personid"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,YAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC;AADS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAA+B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,QAAQ,CAACO,GAAd;AACI,YAAMC,SAAS,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADU;AACK;AACnBC,QAAAA,IAAI,EAAEP,MAAM,CAACQ,MAAP,CAAcD,IAFN;AAGdE,QAAAA,GAAG,EAAET,MAAM,CAACQ,MAAP,CAAcC;AAHL,OAAlB;AAKE,aAAO;AACHZ,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAca,MAAd,CAAqBP,SAArB;AADN,OAAP;;AAGN,SAAKR,QAAQ,CAACgB,MAAd;AACI,aAAO;AACHd,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAce,MAAd,CAAqBJ,MAAM,IAAIA,MAAM,CAACJ,EAAP,KAAcJ,MAAM,CAACa,QAApD;AADN,OAAP;AAXR;;AAeA,SAAOd,KAAP;AACH,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import * as actnType from '../actions';\n\nconst initialState = {\n    persons:[]\n}\n\n\nconst reducer = (state=initialState, action) =>{\n    switch(action.type){\n        case actnType.ADD:\n            const newPerson = {\n                id: Math.random(), // not really unique but good enough here!\n                name: action.person.name,\n                age: action.person.age\n              };\n              return {\n                  persons: state.persons.concat(newPerson) \n              };\n        case actnType.DELETE:\n            return {\n                persons: state.persons.filter(person => person.id !== action.personid)\n              };\n    }\n    return state\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}